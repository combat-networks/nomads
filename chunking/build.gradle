/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'cyberlab' at '5/9/17 2:27 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '1.0'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
    	}
	}
	server {
        java {
            srcDirs = ['src/server/java']
   		}
    }
    android {
        java {
            srcDirs = ['src/android/java']
   		}
    }
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    androidCompile sourceSets.main.output
    androidCompile 'org.robolectric:android-all:7.1.0_r7-robolectric-0'
	androidCompile files('externals/poi/poi-android.jar')

    serverCompile sourceSets.main.output
    	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jar {
	doFirst {
    	project.logger.lifecycle('==================================================================================')
		project.logger.lifecycle('WARNING: This only builds the chunking-server.jar, use task androidJar for android')
		project.logger.lifecycle('==================================================================================')
	}
	from sourceSets.server.output, sourceSets.main.output
	baseName = 'chunking-server'
	manifest {
        attributes 'Implementation-Title': 'openxml-chunking-server',
                   'Implementation-Version': version
    }
}

task androidJar(type: Jar) {
	from sourceSets.android.output, sourceSets.main.output
	baseName = 'chunking-android'
	manifest {
        attributes 'Implementation-Title': 'openxml-chunking-android',
                   'Implementation-Version': version
    }
}
