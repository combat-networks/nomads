// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iw.proto

#include "iw.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace iw {
}  // namespace iw
namespace protobuf_iw_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "iw.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010iw.proto\022\002iw*\177\n\003Str\022\017\n\013mac_address\020\000\022\014"
      "\n\010dev_name\020\001\022\016\n\ntx_bitrate\020\002\022\020\n\014p_link_s"
      "tate\020\003\022\023\n\017peer_power_mode\020\004\022\024\n\020local_pow"
      "er_mode\020\005\022\014\n\010preamble\020\006*\212\002\n\003Int\022\021\n\rinact"
      "ive_time\020\000\022\014\n\010rx_bytes\020\001\022\016\n\nrx_packets\020\002"
      "\022\014\n\010tx_bytes\020\003\022\016\n\ntx_packets\020\004\022\016\n\ntx_ret"
      "ries\020\005\022\r\n\ttx_failed\020\006\022\020\n\014signal_power\020\007\022"
      "\024\n\020singal_power_avg\020\010\022\014\n\010t_offset\020\t\022\r\n\tm"
      "esh_llid\020\n\022\r\n\tmesh_plid\020\013\022\021\n\rauthenticat"
      "ed\020\014\022\016\n\nauthorized\020\r\022\013\n\007wmm_wme\020\016\022\007\n\003mfp"
      "\020\017\022\010\n\004tdls\020\020B-\n us.ihmc.sensei.proto.sub"
      "jects.iwB\002iwZ\002iw\240\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iw.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_iw_2eproto
namespace iw {
const ::google::protobuf::EnumDescriptor* Str_descriptor() {
  protobuf_iw_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iw_2eproto::file_level_enum_descriptors[0];
}
bool Str_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Int_descriptor() {
  protobuf_iw_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iw_2eproto::file_level_enum_descriptors[1];
}
bool Int_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace iw
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
