// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netproxyinfo.proto

#ifndef PROTOBUF_netproxyinfo_2eproto__INCLUDED
#define PROTOBUF_netproxyinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "topology.pb.h"
// @@protoc_insertion_point(includes)
namespace netsensor {
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class NetProxyInfo;
class NetProxyInfoDefaultTypeInternal;
extern NetProxyInfoDefaultTypeInternal _NetProxyInfo_default_instance_;
class NetworkInfo;
class NetworkInfoDefaultTypeInternal;
extern NetworkInfoDefaultTypeInternal _NetworkInfo_default_instance_;
class Topology;
class TopologyDefaultTypeInternal;
extern TopologyDefaultTypeInternal _Topology_default_instance_;
}  // namespace netsensor

namespace netsensor {

namespace protobuf_netproxyinfo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_netproxyinfo_2eproto

// ===================================================================

class NetProxyInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:netsensor.NetProxyInfo) */ {
 public:
  NetProxyInfo();
  virtual ~NetProxyInfo();

  NetProxyInfo(const NetProxyInfo& from);

  inline NetProxyInfo& operator=(const NetProxyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetProxyInfo& default_instance();

  static inline const NetProxyInfo* internal_default_instance() {
    return reinterpret_cast<const NetProxyInfo*>(
               &_NetProxyInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(NetProxyInfo* other);

  // implements Message ----------------------------------------------

  inline NetProxyInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NetProxyInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetProxyInfo& from);
  void MergeFrom(const NetProxyInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetProxyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 remoteNetProxyIPs = 3;
  int remotenetproxyips_size() const;
  void clear_remotenetproxyips();
  static const int kRemoteNetProxyIPsFieldNumber = 3;
  ::google::protobuf::uint32 remotenetproxyips(int index) const;
  void set_remotenetproxyips(int index, ::google::protobuf::uint32 value);
  void add_remotenetproxyips(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remotenetproxyips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remotenetproxyips();

  // .netsensor.NetworkInfo internal = 1;
  bool has_internal() const;
  void clear_internal();
  static const int kInternalFieldNumber = 1;
  const ::netsensor::NetworkInfo& internal() const;
  ::netsensor::NetworkInfo* mutable_internal();
  ::netsensor::NetworkInfo* release_internal();
  void set_allocated_internal(::netsensor::NetworkInfo* internal);

  // .netsensor.NetworkInfo external = 2;
  bool has_external() const;
  void clear_external();
  static const int kExternalFieldNumber = 2;
  const ::netsensor::NetworkInfo& external() const;
  ::netsensor::NetworkInfo* mutable_external();
  ::netsensor::NetworkInfo* release_external();
  void set_allocated_external(::netsensor::NetworkInfo* external);

  // @@protoc_insertion_point(class_scope:netsensor.NetProxyInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remotenetproxyips_;
  mutable int _remotenetproxyips_cached_byte_size_;
  ::netsensor::NetworkInfo* internal_;
  ::netsensor::NetworkInfo* external_;
  mutable int _cached_size_;
  friend struct protobuf_netproxyinfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NetProxyInfo

// .netsensor.NetworkInfo internal = 1;
inline bool NetProxyInfo::has_internal() const {
  return this != internal_default_instance() && internal_ != NULL;
}
inline void NetProxyInfo::clear_internal() {
  if (GetArenaNoVirtual() == NULL && internal_ != NULL) delete internal_;
  internal_ = NULL;
}
inline const ::netsensor::NetworkInfo& NetProxyInfo::internal() const {
  // @@protoc_insertion_point(field_get:netsensor.NetProxyInfo.internal)
  return internal_ != NULL ? *internal_
                         : *::netsensor::NetworkInfo::internal_default_instance();
}
inline ::netsensor::NetworkInfo* NetProxyInfo::mutable_internal() {
  
  if (internal_ == NULL) {
    internal_ = new ::netsensor::NetworkInfo;
  }
  // @@protoc_insertion_point(field_mutable:netsensor.NetProxyInfo.internal)
  return internal_;
}
inline ::netsensor::NetworkInfo* NetProxyInfo::release_internal() {
  // @@protoc_insertion_point(field_release:netsensor.NetProxyInfo.internal)
  
  ::netsensor::NetworkInfo* temp = internal_;
  internal_ = NULL;
  return temp;
}
inline void NetProxyInfo::set_allocated_internal(::netsensor::NetworkInfo* internal) {
  delete internal_;
  internal_ = internal;
  if (internal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:netsensor.NetProxyInfo.internal)
}

// .netsensor.NetworkInfo external = 2;
inline bool NetProxyInfo::has_external() const {
  return this != internal_default_instance() && external_ != NULL;
}
inline void NetProxyInfo::clear_external() {
  if (GetArenaNoVirtual() == NULL && external_ != NULL) delete external_;
  external_ = NULL;
}
inline const ::netsensor::NetworkInfo& NetProxyInfo::external() const {
  // @@protoc_insertion_point(field_get:netsensor.NetProxyInfo.external)
  return external_ != NULL ? *external_
                         : *::netsensor::NetworkInfo::internal_default_instance();
}
inline ::netsensor::NetworkInfo* NetProxyInfo::mutable_external() {
  
  if (external_ == NULL) {
    external_ = new ::netsensor::NetworkInfo;
  }
  // @@protoc_insertion_point(field_mutable:netsensor.NetProxyInfo.external)
  return external_;
}
inline ::netsensor::NetworkInfo* NetProxyInfo::release_external() {
  // @@protoc_insertion_point(field_release:netsensor.NetProxyInfo.external)
  
  ::netsensor::NetworkInfo* temp = external_;
  external_ = NULL;
  return temp;
}
inline void NetProxyInfo::set_allocated_external(::netsensor::NetworkInfo* external) {
  delete external_;
  external_ = external;
  if (external) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:netsensor.NetProxyInfo.external)
}

// repeated uint32 remoteNetProxyIPs = 3;
inline int NetProxyInfo::remotenetproxyips_size() const {
  return remotenetproxyips_.size();
}
inline void NetProxyInfo::clear_remotenetproxyips() {
  remotenetproxyips_.Clear();
}
inline ::google::protobuf::uint32 NetProxyInfo::remotenetproxyips(int index) const {
  // @@protoc_insertion_point(field_get:netsensor.NetProxyInfo.remoteNetProxyIPs)
  return remotenetproxyips_.Get(index);
}
inline void NetProxyInfo::set_remotenetproxyips(int index, ::google::protobuf::uint32 value) {
  remotenetproxyips_.Set(index, value);
  // @@protoc_insertion_point(field_set:netsensor.NetProxyInfo.remoteNetProxyIPs)
}
inline void NetProxyInfo::add_remotenetproxyips(::google::protobuf::uint32 value) {
  remotenetproxyips_.Add(value);
  // @@protoc_insertion_point(field_add:netsensor.NetProxyInfo.remoteNetProxyIPs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NetProxyInfo::remotenetproxyips() const {
  // @@protoc_insertion_point(field_list:netsensor.NetProxyInfo.remoteNetProxyIPs)
  return remotenetproxyips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NetProxyInfo::mutable_remotenetproxyips() {
  // @@protoc_insertion_point(field_mutable_list:netsensor.NetProxyInfo.remoteNetProxyIPs)
  return &remotenetproxyips_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace netsensor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netproxyinfo_2eproto__INCLUDED
