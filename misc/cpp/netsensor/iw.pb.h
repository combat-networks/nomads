// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iw.proto

#ifndef PROTOBUF_INCLUDED_iw_2eproto
#define PROTOBUF_INCLUDED_iw_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_iw_2eproto 

namespace protobuf_iw_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_iw_2eproto
namespace iw {
}  // namespace iw
namespace iw {

enum Str {
  mac_address = 0,
  dev_name = 1,
  tx_bitrate = 2,
  p_link_state = 3,
  peer_power_mode = 4,
  local_power_mode = 5,
  preamble = 6,
  Str_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Str_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Str_IsValid(int value);
const Str Str_MIN = mac_address;
const Str Str_MAX = preamble;
const int Str_ARRAYSIZE = Str_MAX + 1;

const ::google::protobuf::EnumDescriptor* Str_descriptor();
inline const ::std::string& Str_Name(Str value) {
  return ::google::protobuf::internal::NameOfEnum(
    Str_descriptor(), value);
}
inline bool Str_Parse(
    const ::std::string& name, Str* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Str>(
    Str_descriptor(), name, value);
}
enum Int {
  inactive_time = 0,
  rx_bytes = 1,
  rx_packets = 2,
  tx_bytes = 3,
  tx_packets = 4,
  tx_retries = 5,
  tx_failed = 6,
  signal_power = 7,
  singal_power_avg = 8,
  t_offset = 9,
  mesh_llid = 10,
  mesh_plid = 11,
  authenticated = 12,
  authorized = 13,
  wmm_wme = 14,
  mfp = 15,
  tdls = 16,
  Int_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Int_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Int_IsValid(int value);
const Int Int_MIN = inactive_time;
const Int Int_MAX = tdls;
const int Int_ARRAYSIZE = Int_MAX + 1;

const ::google::protobuf::EnumDescriptor* Int_descriptor();
inline const ::std::string& Int_Name(Int value) {
  return ::google::protobuf::internal::NameOfEnum(
    Int_descriptor(), value);
}
inline bool Int_Parse(
    const ::std::string& name, Int* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Int>(
    Int_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace iw

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::iw::Str> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::iw::Str>() {
  return ::iw::Str_descriptor();
}
template <> struct is_proto_enum< ::iw::Int> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::iw::Int>() {
  return ::iw::Int_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_iw_2eproto
