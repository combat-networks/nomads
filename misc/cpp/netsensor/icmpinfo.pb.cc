// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: icmpinfo.proto

#include "icmpinfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_icmpinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoDatagramInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoExtraAddresses;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoICMPTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoIdentification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoIpHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ProtoICMPInfoContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_icmpinfo_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ProtoData;
}  // namespace protobuf_icmpinfo_2eproto
namespace netsensor {
class ICMPPacketsByInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ICMPPacketsByInterface>
      _instance;
} _ICMPPacketsByInterface_default_instance_;
class ProtoICMPInfoContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoICMPInfoContainer>
      _instance;
} _ProtoICMPInfoContainer_default_instance_;
class ProtoDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoData>
      _instance;
} _ProtoData_default_instance_;
class ProtoIdentificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoIdentification>
      _instance;
} _ProtoIdentification_default_instance_;
class ProtoIpHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoIpHeader>
      _instance;
} _ProtoIpHeader_default_instance_;
class ProtoDatagramInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoDatagramInfo>
      _instance;
} _ProtoDatagramInfo_default_instance_;
class ProtoICMPTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoICMPTime>
      _instance;
} _ProtoICMPTime_default_instance_;
class ProtoExtraAddressesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoExtraAddresses>
      _instance;
} _ProtoExtraAddresses_default_instance_;
}  // namespace netsensor
namespace protobuf_icmpinfo_2eproto {
static void InitDefaultsICMPPacketsByInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ICMPPacketsByInterface_default_instance_;
    new (ptr) ::netsensor::ICMPPacketsByInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ICMPPacketsByInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ICMPPacketsByInterface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsICMPPacketsByInterface}, {
      &protobuf_icmpinfo_2eproto::scc_info_ProtoICMPInfoContainer.base,}};

static void InitDefaultsProtoICMPInfoContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoICMPInfoContainer_default_instance_;
    new (ptr) ::netsensor::ProtoICMPInfoContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoICMPInfoContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProtoICMPInfoContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProtoICMPInfoContainer}, {
      &protobuf_icmpinfo_2eproto::scc_info_ProtoData.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsProtoData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoData_default_instance_;
    new (ptr) ::netsensor::ProtoData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ProtoData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsProtoData}, {
      &protobuf_icmpinfo_2eproto::scc_info_ProtoIdentification.base,
      &protobuf_icmpinfo_2eproto::scc_info_ProtoIpHeader.base,
      &protobuf_icmpinfo_2eproto::scc_info_ProtoDatagramInfo.base,
      &protobuf_icmpinfo_2eproto::scc_info_ProtoICMPTime.base,
      &protobuf_icmpinfo_2eproto::scc_info_ProtoExtraAddresses.base,}};

static void InitDefaultsProtoIdentification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoIdentification_default_instance_;
    new (ptr) ::netsensor::ProtoIdentification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoIdentification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoIdentification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoIdentification}, {}};

static void InitDefaultsProtoIpHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoIpHeader_default_instance_;
    new (ptr) ::netsensor::ProtoIpHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoIpHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoIpHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoIpHeader}, {}};

static void InitDefaultsProtoDatagramInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoDatagramInfo_default_instance_;
    new (ptr) ::netsensor::ProtoDatagramInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoDatagramInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoDatagramInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoDatagramInfo}, {}};

static void InitDefaultsProtoICMPTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoICMPTime_default_instance_;
    new (ptr) ::netsensor::ProtoICMPTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoICMPTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoICMPTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoICMPTime}, {}};

static void InitDefaultsProtoExtraAddresses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::netsensor::_ProtoExtraAddresses_default_instance_;
    new (ptr) ::netsensor::ProtoExtraAddresses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::netsensor::ProtoExtraAddresses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoExtraAddresses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoExtraAddresses}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ICMPPacketsByInterface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoICMPInfoContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoIdentification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoIpHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoDatagramInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoICMPTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoExtraAddresses.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ICMPPacketsByInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ICMPPacketsByInterface, monitoringinterface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ICMPPacketsByInterface, icmpcontainers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, sourcemac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, destmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, sourceipaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, destipaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, icmppayload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPInfoContainer, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, pointertoerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, ipheader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, dgram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, icmptimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoData, extraaddresses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIdentification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIdentification, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIdentification, sequencenumber_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, tos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, origsourceipaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoIpHeader, origdestipaddr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoDatagramInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoDatagramInfo, sourceport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoDatagramInfo, destport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPTime, originatetimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPTime, receivetimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoICMPTime, transmittimestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoExtraAddresses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoExtraAddresses, ipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::netsensor::ProtoExtraAddresses, timesrepeated_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::netsensor::ICMPPacketsByInterface)},
  { 7, -1, sizeof(::netsensor::ProtoICMPInfoContainer)},
  { 21, -1, sizeof(::netsensor::ProtoData)},
  { 32, -1, sizeof(::netsensor::ProtoIdentification)},
  { 39, -1, sizeof(::netsensor::ProtoIpHeader)},
  { 49, -1, sizeof(::netsensor::ProtoDatagramInfo)},
  { 56, -1, sizeof(::netsensor::ProtoICMPTime)},
  { 64, -1, sizeof(::netsensor::ProtoExtraAddresses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ICMPPacketsByInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoICMPInfoContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoIdentification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoIpHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoDatagramInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoICMPTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::netsensor::_ProtoExtraAddresses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "icmpinfo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016icmpinfo.proto\022\tnetsensor\032\037google/prot"
      "obuf/timestamp.proto\"p\n\026ICMPPacketsByInt"
      "erface\022\033\n\023monitoringInterface\030\001 \001(\t\0229\n\016i"
      "cmpContainers\030\002 \003(\0132!.netsensor.ProtoICM"
      "PInfoContainer\"\353\001\n\026ProtoICMPInfoContaine"
      "r\022\021\n\tsourceMAC\030\001 \001(\t\022\017\n\007destMAC\030\002 \001(\t\022\024\n"
      "\014sourceIPAddr\030\003 \001(\t\022\022\n\ndestIPAddr\030\004 \001(\t\022"
      "\014\n\004type\030\005 \001(\r\022\014\n\004code\030\006 \001(\r\022\r\n\005count\030\007 \001"
      "(\r\022)\n\013ICMPPayload\030\010 \001(\0132\024.netsensor.Prot"
      "oData\022-\n\ttimestamp\030\t \001(\0132\032.google.protob"
      "uf.Timestamp\"\221\002\n\tProtoData\022\026\n\016pointerToE"
      "rror\030\001 \001(\r\022*\n\002id\030\002 \001(\0132\036.netsensor.Proto"
      "Identification\022*\n\010ipHeader\030\003 \001(\0132\030.netse"
      "nsor.ProtoIpHeader\022+\n\005dgram\030\004 \001(\0132\034.nets"
      "ensor.ProtoDatagramInfo\022/\n\ricmpTimestamp"
      "\030\005 \001(\0132\030.netsensor.ProtoICMPTime\0226\n\016extr"
      "aAddresses\030\006 \003(\0132\036.netsensor.ProtoExtraA"
      "ddresses\"A\n\023ProtoIdentification\022\022\n\nident"
      "ifier\030\001 \001(\r\022\026\n\016sequenceNumber\030\002 \001(\r\"p\n\rP"
      "rotoIpHeader\022\013\n\003tos\030\001 \001(\r\022\016\n\006length\030\002 \001("
      "\r\022\020\n\010protocol\030\003 \001(\r\022\030\n\020origSourceIPAddr\030"
      "\004 \001(\t\022\026\n\016origDestIPAddr\030\005 \001(\t\"9\n\021ProtoDa"
      "tagramInfo\022\022\n\nsourcePort\030\001 \001(\r\022\020\n\010destPo"
      "rt\030\002 \001(\r\"`\n\rProtoICMPTime\022\032\n\022originateTi"
      "mestamp\030\001 \001(\r\022\030\n\020receiveTimestamp\030\002 \001(\r\022"
      "\031\n\021transmitTimestamp\030\003 \001(\r\"\?\n\023ProtoExtra"
      "Addresses\022\021\n\tIPAddress\030\001 \001(\t\022\025\n\rtimesRep"
      "eated\030\002 \001(\rB\013Z\tnetsensorb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1112);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "icmpinfo.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_icmpinfo_2eproto
namespace netsensor {

// ===================================================================

void ICMPPacketsByInterface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ICMPPacketsByInterface::kMonitoringInterfaceFieldNumber;
const int ICMPPacketsByInterface::kIcmpContainersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ICMPPacketsByInterface::ICMPPacketsByInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ICMPPacketsByInterface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ICMPPacketsByInterface)
}
ICMPPacketsByInterface::ICMPPacketsByInterface(const ICMPPacketsByInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      icmpcontainers_(from.icmpcontainers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monitoringinterface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoringinterface().size() > 0) {
    monitoringinterface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoringinterface_);
  }
  // @@protoc_insertion_point(copy_constructor:netsensor.ICMPPacketsByInterface)
}

void ICMPPacketsByInterface::SharedCtor() {
  monitoringinterface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ICMPPacketsByInterface::~ICMPPacketsByInterface() {
  // @@protoc_insertion_point(destructor:netsensor.ICMPPacketsByInterface)
  SharedDtor();
}

void ICMPPacketsByInterface::SharedDtor() {
  monitoringinterface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ICMPPacketsByInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ICMPPacketsByInterface::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ICMPPacketsByInterface& ICMPPacketsByInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ICMPPacketsByInterface.base);
  return *internal_default_instance();
}


void ICMPPacketsByInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ICMPPacketsByInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icmpcontainers_.Clear();
  monitoringinterface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ICMPPacketsByInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ICMPPacketsByInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string monitoringInterface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoringinterface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoringinterface().data(), static_cast<int>(this->monitoringinterface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ICMPPacketsByInterface.monitoringInterface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .netsensor.ProtoICMPInfoContainer icmpContainers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_icmpcontainers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ICMPPacketsByInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ICMPPacketsByInterface)
  return false;
#undef DO_
}

void ICMPPacketsByInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ICMPPacketsByInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string monitoringInterface = 1;
  if (this->monitoringinterface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoringinterface().data(), static_cast<int>(this->monitoringinterface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ICMPPacketsByInterface.monitoringInterface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->monitoringinterface(), output);
  }

  // repeated .netsensor.ProtoICMPInfoContainer icmpContainers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->icmpcontainers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->icmpcontainers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ICMPPacketsByInterface)
}

::google::protobuf::uint8* ICMPPacketsByInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ICMPPacketsByInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string monitoringInterface = 1;
  if (this->monitoringinterface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoringinterface().data(), static_cast<int>(this->monitoringinterface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ICMPPacketsByInterface.monitoringInterface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->monitoringinterface(), target);
  }

  // repeated .netsensor.ProtoICMPInfoContainer icmpContainers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->icmpcontainers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->icmpcontainers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ICMPPacketsByInterface)
  return target;
}

size_t ICMPPacketsByInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ICMPPacketsByInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .netsensor.ProtoICMPInfoContainer icmpContainers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->icmpcontainers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->icmpcontainers(static_cast<int>(i)));
    }
  }

  // string monitoringInterface = 1;
  if (this->monitoringinterface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoringinterface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ICMPPacketsByInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ICMPPacketsByInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const ICMPPacketsByInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ICMPPacketsByInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ICMPPacketsByInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ICMPPacketsByInterface)
    MergeFrom(*source);
  }
}

void ICMPPacketsByInterface::MergeFrom(const ICMPPacketsByInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ICMPPacketsByInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  icmpcontainers_.MergeFrom(from.icmpcontainers_);
  if (from.monitoringinterface().size() > 0) {

    monitoringinterface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoringinterface_);
  }
}

void ICMPPacketsByInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ICMPPacketsByInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ICMPPacketsByInterface::CopyFrom(const ICMPPacketsByInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ICMPPacketsByInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ICMPPacketsByInterface::IsInitialized() const {
  return true;
}

void ICMPPacketsByInterface::Swap(ICMPPacketsByInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ICMPPacketsByInterface::InternalSwap(ICMPPacketsByInterface* other) {
  using std::swap;
  CastToBase(&icmpcontainers_)->InternalSwap(CastToBase(&other->icmpcontainers_));
  monitoringinterface_.Swap(&other->monitoringinterface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ICMPPacketsByInterface::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoICMPInfoContainer::InitAsDefaultInstance() {
  ::netsensor::_ProtoICMPInfoContainer_default_instance_._instance.get_mutable()->icmppayload_ = const_cast< ::netsensor::ProtoData*>(
      ::netsensor::ProtoData::internal_default_instance());
  ::netsensor::_ProtoICMPInfoContainer_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ProtoICMPInfoContainer::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoICMPInfoContainer::kSourceMACFieldNumber;
const int ProtoICMPInfoContainer::kDestMACFieldNumber;
const int ProtoICMPInfoContainer::kSourceIPAddrFieldNumber;
const int ProtoICMPInfoContainer::kDestIPAddrFieldNumber;
const int ProtoICMPInfoContainer::kTypeFieldNumber;
const int ProtoICMPInfoContainer::kCodeFieldNumber;
const int ProtoICMPInfoContainer::kCountFieldNumber;
const int ProtoICMPInfoContainer::kICMPPayloadFieldNumber;
const int ProtoICMPInfoContainer::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoICMPInfoContainer::ProtoICMPInfoContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoICMPInfoContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoICMPInfoContainer)
}
ProtoICMPInfoContainer::ProtoICMPInfoContainer(const ProtoICMPInfoContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourcemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourcemac().size() > 0) {
    sourcemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcemac_);
  }
  destmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destmac().size() > 0) {
    destmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destmac_);
  }
  sourceipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourceipaddr().size() > 0) {
    sourceipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceipaddr_);
  }
  destipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destipaddr().size() > 0) {
    destipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destipaddr_);
  }
  if (from.has_icmppayload()) {
    icmppayload_ = new ::netsensor::ProtoData(*from.icmppayload_);
  } else {
    icmppayload_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&type_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoICMPInfoContainer)
}

void ProtoICMPInfoContainer::SharedCtor() {
  sourcemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&icmppayload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&icmppayload_)) + sizeof(count_));
}

ProtoICMPInfoContainer::~ProtoICMPInfoContainer() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoICMPInfoContainer)
  SharedDtor();
}

void ProtoICMPInfoContainer::SharedDtor() {
  sourcemac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete icmppayload_;
  if (this != internal_default_instance()) delete timestamp_;
}

void ProtoICMPInfoContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoICMPInfoContainer::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoICMPInfoContainer& ProtoICMPInfoContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoICMPInfoContainer.base);
  return *internal_default_instance();
}


void ProtoICMPInfoContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoICMPInfoContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcemac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && icmppayload_ != NULL) {
    delete icmppayload_;
  }
  icmppayload_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool ProtoICMPInfoContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoICMPInfoContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sourceMAC = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourcemac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourcemac().data(), static_cast<int>(this->sourcemac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoICMPInfoContainer.sourceMAC"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destMAC = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destmac().data(), static_cast<int>(this->destmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoICMPInfoContainer.destMAC"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceIPAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourceipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourceipaddr().data(), static_cast<int>(this->sourceipaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoICMPInfoContainer.sourceIPAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destIPAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destipaddr().data(), static_cast<int>(this->destipaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoICMPInfoContainer.destIPAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netsensor.ProtoData ICMPPayload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_icmppayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoICMPInfoContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoICMPInfoContainer)
  return false;
#undef DO_
}

void ProtoICMPInfoContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoICMPInfoContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sourceMAC = 1;
  if (this->sourcemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcemac().data(), static_cast<int>(this->sourcemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.sourceMAC");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sourcemac(), output);
  }

  // string destMAC = 2;
  if (this->destmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destmac().data(), static_cast<int>(this->destmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.destMAC");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destmac(), output);
  }

  // string sourceIPAddr = 3;
  if (this->sourceipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceipaddr().data(), static_cast<int>(this->sourceipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.sourceIPAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sourceipaddr(), output);
  }

  // string destIPAddr = 4;
  if (this->destipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destipaddr().data(), static_cast<int>(this->destipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.destIPAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->destipaddr(), output);
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // uint32 code = 6;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->code(), output);
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->count(), output);
  }

  // .netsensor.ProtoData ICMPPayload = 8;
  if (this->has_icmppayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_icmppayload(), output);
  }

  // .google.protobuf.Timestamp timestamp = 9;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoICMPInfoContainer)
}

::google::protobuf::uint8* ProtoICMPInfoContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoICMPInfoContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sourceMAC = 1;
  if (this->sourcemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcemac().data(), static_cast<int>(this->sourcemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.sourceMAC");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sourcemac(), target);
  }

  // string destMAC = 2;
  if (this->destmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destmac().data(), static_cast<int>(this->destmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.destMAC");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destmac(), target);
  }

  // string sourceIPAddr = 3;
  if (this->sourceipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceipaddr().data(), static_cast<int>(this->sourceipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.sourceIPAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sourceipaddr(), target);
  }

  // string destIPAddr = 4;
  if (this->destipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destipaddr().data(), static_cast<int>(this->destipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoICMPInfoContainer.destIPAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->destipaddr(), target);
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // uint32 code = 6;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->code(), target);
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->count(), target);
  }

  // .netsensor.ProtoData ICMPPayload = 8;
  if (this->has_icmppayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_icmppayload(), deterministic, target);
  }

  // .google.protobuf.Timestamp timestamp = 9;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_timestamp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoICMPInfoContainer)
  return target;
}

size_t ProtoICMPInfoContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoICMPInfoContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sourceMAC = 1;
  if (this->sourcemac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourcemac());
  }

  // string destMAC = 2;
  if (this->destmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destmac());
  }

  // string sourceIPAddr = 3;
  if (this->sourceipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourceipaddr());
  }

  // string destIPAddr = 4;
  if (this->destipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destipaddr());
  }

  // .netsensor.ProtoData ICMPPayload = 8;
  if (this->has_icmppayload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *icmppayload_);
  }

  // .google.protobuf.Timestamp timestamp = 9;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 code = 6;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoICMPInfoContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoICMPInfoContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoICMPInfoContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoICMPInfoContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoICMPInfoContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoICMPInfoContainer)
    MergeFrom(*source);
  }
}

void ProtoICMPInfoContainer::MergeFrom(const ProtoICMPInfoContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoICMPInfoContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcemac().size() > 0) {

    sourcemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcemac_);
  }
  if (from.destmac().size() > 0) {

    destmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destmac_);
  }
  if (from.sourceipaddr().size() > 0) {

    sourceipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceipaddr_);
  }
  if (from.destipaddr().size() > 0) {

    destipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destipaddr_);
  }
  if (from.has_icmppayload()) {
    mutable_icmppayload()->::netsensor::ProtoData::MergeFrom(from.icmppayload());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void ProtoICMPInfoContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoICMPInfoContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoICMPInfoContainer::CopyFrom(const ProtoICMPInfoContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoICMPInfoContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoICMPInfoContainer::IsInitialized() const {
  return true;
}

void ProtoICMPInfoContainer::Swap(ProtoICMPInfoContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoICMPInfoContainer::InternalSwap(ProtoICMPInfoContainer* other) {
  using std::swap;
  sourcemac_.Swap(&other->sourcemac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destmac_.Swap(&other->destmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sourceipaddr_.Swap(&other->sourceipaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destipaddr_.Swap(&other->destipaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(icmppayload_, other->icmppayload_);
  swap(timestamp_, other->timestamp_);
  swap(type_, other->type_);
  swap(code_, other->code_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoICMPInfoContainer::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoData::InitAsDefaultInstance() {
  ::netsensor::_ProtoData_default_instance_._instance.get_mutable()->id_ = const_cast< ::netsensor::ProtoIdentification*>(
      ::netsensor::ProtoIdentification::internal_default_instance());
  ::netsensor::_ProtoData_default_instance_._instance.get_mutable()->ipheader_ = const_cast< ::netsensor::ProtoIpHeader*>(
      ::netsensor::ProtoIpHeader::internal_default_instance());
  ::netsensor::_ProtoData_default_instance_._instance.get_mutable()->dgram_ = const_cast< ::netsensor::ProtoDatagramInfo*>(
      ::netsensor::ProtoDatagramInfo::internal_default_instance());
  ::netsensor::_ProtoData_default_instance_._instance.get_mutable()->icmptimestamp_ = const_cast< ::netsensor::ProtoICMPTime*>(
      ::netsensor::ProtoICMPTime::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoData::kPointerToErrorFieldNumber;
const int ProtoData::kIdFieldNumber;
const int ProtoData::kIpHeaderFieldNumber;
const int ProtoData::kDgramFieldNumber;
const int ProtoData::kIcmpTimestampFieldNumber;
const int ProtoData::kExtraAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoData::ProtoData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoData)
}
ProtoData::ProtoData(const ProtoData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extraaddresses_(from.extraaddresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::netsensor::ProtoIdentification(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_ipheader()) {
    ipheader_ = new ::netsensor::ProtoIpHeader(*from.ipheader_);
  } else {
    ipheader_ = NULL;
  }
  if (from.has_dgram()) {
    dgram_ = new ::netsensor::ProtoDatagramInfo(*from.dgram_);
  } else {
    dgram_ = NULL;
  }
  if (from.has_icmptimestamp()) {
    icmptimestamp_ = new ::netsensor::ProtoICMPTime(*from.icmptimestamp_);
  } else {
    icmptimestamp_ = NULL;
  }
  pointertoerror_ = from.pointertoerror_;
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoData)
}

void ProtoData::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pointertoerror_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pointertoerror_));
}

ProtoData::~ProtoData() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoData)
  SharedDtor();
}

void ProtoData::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete ipheader_;
  if (this != internal_default_instance()) delete dgram_;
  if (this != internal_default_instance()) delete icmptimestamp_;
}

void ProtoData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoData::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoData& ProtoData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoData.base);
  return *internal_default_instance();
}


void ProtoData::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extraaddresses_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && ipheader_ != NULL) {
    delete ipheader_;
  }
  ipheader_ = NULL;
  if (GetArenaNoVirtual() == NULL && dgram_ != NULL) {
    delete dgram_;
  }
  dgram_ = NULL;
  if (GetArenaNoVirtual() == NULL && icmptimestamp_ != NULL) {
    delete icmptimestamp_;
  }
  icmptimestamp_ = NULL;
  pointertoerror_ = 0u;
  _internal_metadata_.Clear();
}

bool ProtoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pointerToError = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pointertoerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netsensor.ProtoIdentification id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netsensor.ProtoIpHeader ipHeader = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipheader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netsensor.ProtoDatagramInfo dgram = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dgram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .netsensor.ProtoICMPTime icmpTimestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_icmptimestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .netsensor.ProtoExtraAddresses extraAddresses = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extraaddresses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoData)
  return false;
#undef DO_
}

void ProtoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pointerToError = 1;
  if (this->pointertoerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pointertoerror(), output);
  }

  // .netsensor.ProtoIdentification id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // .netsensor.ProtoIpHeader ipHeader = 3;
  if (this->has_ipheader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ipheader(), output);
  }

  // .netsensor.ProtoDatagramInfo dgram = 4;
  if (this->has_dgram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_dgram(), output);
  }

  // .netsensor.ProtoICMPTime icmpTimestamp = 5;
  if (this->has_icmptimestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_icmptimestamp(), output);
  }

  // repeated .netsensor.ProtoExtraAddresses extraAddresses = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraaddresses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->extraaddresses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoData)
}

::google::protobuf::uint8* ProtoData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pointerToError = 1;
  if (this->pointertoerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pointertoerror(), target);
  }

  // .netsensor.ProtoIdentification id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // .netsensor.ProtoIpHeader ipHeader = 3;
  if (this->has_ipheader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ipheader(), deterministic, target);
  }

  // .netsensor.ProtoDatagramInfo dgram = 4;
  if (this->has_dgram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_dgram(), deterministic, target);
  }

  // .netsensor.ProtoICMPTime icmpTimestamp = 5;
  if (this->has_icmptimestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_icmptimestamp(), deterministic, target);
  }

  // repeated .netsensor.ProtoExtraAddresses extraAddresses = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraaddresses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->extraaddresses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoData)
  return target;
}

size_t ProtoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .netsensor.ProtoExtraAddresses extraAddresses = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->extraaddresses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extraaddresses(static_cast<int>(i)));
    }
  }

  // .netsensor.ProtoIdentification id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .netsensor.ProtoIpHeader ipHeader = 3;
  if (this->has_ipheader()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ipheader_);
  }

  // .netsensor.ProtoDatagramInfo dgram = 4;
  if (this->has_dgram()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dgram_);
  }

  // .netsensor.ProtoICMPTime icmpTimestamp = 5;
  if (this->has_icmptimestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *icmptimestamp_);
  }

  // uint32 pointerToError = 1;
  if (this->pointertoerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pointertoerror());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoData)
    MergeFrom(*source);
  }
}

void ProtoData::MergeFrom(const ProtoData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extraaddresses_.MergeFrom(from.extraaddresses_);
  if (from.has_id()) {
    mutable_id()->::netsensor::ProtoIdentification::MergeFrom(from.id());
  }
  if (from.has_ipheader()) {
    mutable_ipheader()->::netsensor::ProtoIpHeader::MergeFrom(from.ipheader());
  }
  if (from.has_dgram()) {
    mutable_dgram()->::netsensor::ProtoDatagramInfo::MergeFrom(from.dgram());
  }
  if (from.has_icmptimestamp()) {
    mutable_icmptimestamp()->::netsensor::ProtoICMPTime::MergeFrom(from.icmptimestamp());
  }
  if (from.pointertoerror() != 0) {
    set_pointertoerror(from.pointertoerror());
  }
}

void ProtoData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoData::CopyFrom(const ProtoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoData::IsInitialized() const {
  return true;
}

void ProtoData::Swap(ProtoData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoData::InternalSwap(ProtoData* other) {
  using std::swap;
  CastToBase(&extraaddresses_)->InternalSwap(CastToBase(&other->extraaddresses_));
  swap(id_, other->id_);
  swap(ipheader_, other->ipheader_);
  swap(dgram_, other->dgram_);
  swap(icmptimestamp_, other->icmptimestamp_);
  swap(pointertoerror_, other->pointertoerror_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoData::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoIdentification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoIdentification::kIdentifierFieldNumber;
const int ProtoIdentification::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoIdentification::ProtoIdentification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoIdentification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoIdentification)
}
ProtoIdentification::ProtoIdentification(const ProtoIdentification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&identifier_, &from.identifier_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequencenumber_) -
    reinterpret_cast<char*>(&identifier_)) + sizeof(sequencenumber_));
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoIdentification)
}

void ProtoIdentification::SharedCtor() {
  ::memset(&identifier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumber_) -
      reinterpret_cast<char*>(&identifier_)) + sizeof(sequencenumber_));
}

ProtoIdentification::~ProtoIdentification() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoIdentification)
  SharedDtor();
}

void ProtoIdentification::SharedDtor() {
}

void ProtoIdentification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoIdentification::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoIdentification& ProtoIdentification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoIdentification.base);
  return *internal_default_instance();
}


void ProtoIdentification::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&identifier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumber_) -
      reinterpret_cast<char*>(&identifier_)) + sizeof(sequencenumber_));
  _internal_metadata_.Clear();
}

bool ProtoIdentification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoIdentification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 identifier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &identifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sequenceNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequencenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoIdentification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoIdentification)
  return false;
#undef DO_
}

void ProtoIdentification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 identifier = 1;
  if (this->identifier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->identifier(), output);
  }

  // uint32 sequenceNumber = 2;
  if (this->sequencenumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sequencenumber(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoIdentification)
}

::google::protobuf::uint8* ProtoIdentification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 identifier = 1;
  if (this->identifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->identifier(), target);
  }

  // uint32 sequenceNumber = 2;
  if (this->sequencenumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sequencenumber(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoIdentification)
  return target;
}

size_t ProtoIdentification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoIdentification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 identifier = 1;
  if (this->identifier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->identifier());
  }

  // uint32 sequenceNumber = 2;
  if (this->sequencenumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIdentification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIdentification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoIdentification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoIdentification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoIdentification)
    MergeFrom(*source);
  }
}

void ProtoIdentification::MergeFrom(const ProtoIdentification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identifier() != 0) {
    set_identifier(from.identifier());
  }
  if (from.sequencenumber() != 0) {
    set_sequencenumber(from.sequencenumber());
  }
}

void ProtoIdentification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIdentification::CopyFrom(const ProtoIdentification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIdentification::IsInitialized() const {
  return true;
}

void ProtoIdentification::Swap(ProtoIdentification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoIdentification::InternalSwap(ProtoIdentification* other) {
  using std::swap;
  swap(identifier_, other->identifier_);
  swap(sequencenumber_, other->sequencenumber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoIdentification::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoIpHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoIpHeader::kTosFieldNumber;
const int ProtoIpHeader::kLengthFieldNumber;
const int ProtoIpHeader::kProtocolFieldNumber;
const int ProtoIpHeader::kOrigSourceIPAddrFieldNumber;
const int ProtoIpHeader::kOrigDestIPAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoIpHeader::ProtoIpHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoIpHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoIpHeader)
}
ProtoIpHeader::ProtoIpHeader(const ProtoIpHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origsourceipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origsourceipaddr().size() > 0) {
    origsourceipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origsourceipaddr_);
  }
  origdestipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origdestipaddr().size() > 0) {
    origdestipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origdestipaddr_);
  }
  ::memcpy(&tos_, &from.tos_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_) -
    reinterpret_cast<char*>(&tos_)) + sizeof(protocol_));
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoIpHeader)
}

void ProtoIpHeader::SharedCtor() {
  origsourceipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origdestipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_) -
      reinterpret_cast<char*>(&tos_)) + sizeof(protocol_));
}

ProtoIpHeader::~ProtoIpHeader() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoIpHeader)
  SharedDtor();
}

void ProtoIpHeader::SharedDtor() {
  origsourceipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origdestipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoIpHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoIpHeader::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoIpHeader& ProtoIpHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoIpHeader.base);
  return *internal_default_instance();
}


void ProtoIpHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoIpHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origsourceipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origdestipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_) -
      reinterpret_cast<char*>(&tos_)) + sizeof(protocol_));
  _internal_metadata_.Clear();
}

bool ProtoIpHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoIpHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 protocol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origSourceIPAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origsourceipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origsourceipaddr().data(), static_cast<int>(this->origsourceipaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoIpHeader.origSourceIPAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origDestIPAddr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origdestipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origdestipaddr().data(), static_cast<int>(this->origdestipaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoIpHeader.origDestIPAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoIpHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoIpHeader)
  return false;
#undef DO_
}

void ProtoIpHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoIpHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tos = 1;
  if (this->tos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tos(), output);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->length(), output);
  }

  // uint32 protocol = 3;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->protocol(), output);
  }

  // string origSourceIPAddr = 4;
  if (this->origsourceipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origsourceipaddr().data(), static_cast<int>(this->origsourceipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoIpHeader.origSourceIPAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->origsourceipaddr(), output);
  }

  // string origDestIPAddr = 5;
  if (this->origdestipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origdestipaddr().data(), static_cast<int>(this->origdestipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoIpHeader.origDestIPAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->origdestipaddr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoIpHeader)
}

::google::protobuf::uint8* ProtoIpHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoIpHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tos = 1;
  if (this->tos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tos(), target);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->length(), target);
  }

  // uint32 protocol = 3;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->protocol(), target);
  }

  // string origSourceIPAddr = 4;
  if (this->origsourceipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origsourceipaddr().data(), static_cast<int>(this->origsourceipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoIpHeader.origSourceIPAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->origsourceipaddr(), target);
  }

  // string origDestIPAddr = 5;
  if (this->origdestipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origdestipaddr().data(), static_cast<int>(this->origdestipaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoIpHeader.origDestIPAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->origdestipaddr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoIpHeader)
  return target;
}

size_t ProtoIpHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoIpHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string origSourceIPAddr = 4;
  if (this->origsourceipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origsourceipaddr());
  }

  // string origDestIPAddr = 5;
  if (this->origdestipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origdestipaddr());
  }

  // uint32 tos = 1;
  if (this->tos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tos());
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  // uint32 protocol = 3;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoIpHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoIpHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoIpHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoIpHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoIpHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoIpHeader)
    MergeFrom(*source);
  }
}

void ProtoIpHeader::MergeFrom(const ProtoIpHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoIpHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.origsourceipaddr().size() > 0) {

    origsourceipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origsourceipaddr_);
  }
  if (from.origdestipaddr().size() > 0) {

    origdestipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origdestipaddr_);
  }
  if (from.tos() != 0) {
    set_tos(from.tos());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
}

void ProtoIpHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoIpHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoIpHeader::CopyFrom(const ProtoIpHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoIpHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoIpHeader::IsInitialized() const {
  return true;
}

void ProtoIpHeader::Swap(ProtoIpHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoIpHeader::InternalSwap(ProtoIpHeader* other) {
  using std::swap;
  origsourceipaddr_.Swap(&other->origsourceipaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  origdestipaddr_.Swap(&other->origdestipaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tos_, other->tos_);
  swap(length_, other->length_);
  swap(protocol_, other->protocol_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoIpHeader::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoDatagramInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoDatagramInfo::kSourcePortFieldNumber;
const int ProtoDatagramInfo::kDestPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoDatagramInfo::ProtoDatagramInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoDatagramInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoDatagramInfo)
}
ProtoDatagramInfo::ProtoDatagramInfo(const ProtoDatagramInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sourceport_, &from.sourceport_,
    static_cast<size_t>(reinterpret_cast<char*>(&destport_) -
    reinterpret_cast<char*>(&sourceport_)) + sizeof(destport_));
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoDatagramInfo)
}

void ProtoDatagramInfo::SharedCtor() {
  ::memset(&sourceport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destport_) -
      reinterpret_cast<char*>(&sourceport_)) + sizeof(destport_));
}

ProtoDatagramInfo::~ProtoDatagramInfo() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoDatagramInfo)
  SharedDtor();
}

void ProtoDatagramInfo::SharedDtor() {
}

void ProtoDatagramInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoDatagramInfo::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoDatagramInfo& ProtoDatagramInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoDatagramInfo.base);
  return *internal_default_instance();
}


void ProtoDatagramInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoDatagramInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sourceport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destport_) -
      reinterpret_cast<char*>(&sourceport_)) + sizeof(destport_));
  _internal_metadata_.Clear();
}

bool ProtoDatagramInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoDatagramInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sourcePort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourceport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoDatagramInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoDatagramInfo)
  return false;
#undef DO_
}

void ProtoDatagramInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoDatagramInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sourcePort = 1;
  if (this->sourceport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sourceport(), output);
  }

  // uint32 destPort = 2;
  if (this->destport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->destport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoDatagramInfo)
}

::google::protobuf::uint8* ProtoDatagramInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoDatagramInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sourcePort = 1;
  if (this->sourceport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sourceport(), target);
  }

  // uint32 destPort = 2;
  if (this->destport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->destport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoDatagramInfo)
  return target;
}

size_t ProtoDatagramInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoDatagramInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 sourcePort = 1;
  if (this->sourceport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sourceport());
  }

  // uint32 destPort = 2;
  if (this->destport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoDatagramInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoDatagramInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoDatagramInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoDatagramInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoDatagramInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoDatagramInfo)
    MergeFrom(*source);
  }
}

void ProtoDatagramInfo::MergeFrom(const ProtoDatagramInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoDatagramInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourceport() != 0) {
    set_sourceport(from.sourceport());
  }
  if (from.destport() != 0) {
    set_destport(from.destport());
  }
}

void ProtoDatagramInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoDatagramInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDatagramInfo::CopyFrom(const ProtoDatagramInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoDatagramInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDatagramInfo::IsInitialized() const {
  return true;
}

void ProtoDatagramInfo::Swap(ProtoDatagramInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoDatagramInfo::InternalSwap(ProtoDatagramInfo* other) {
  using std::swap;
  swap(sourceport_, other->sourceport_);
  swap(destport_, other->destport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoDatagramInfo::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoICMPTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoICMPTime::kOriginateTimestampFieldNumber;
const int ProtoICMPTime::kReceiveTimestampFieldNumber;
const int ProtoICMPTime::kTransmitTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoICMPTime::ProtoICMPTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoICMPTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoICMPTime)
}
ProtoICMPTime::ProtoICMPTime(const ProtoICMPTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&originatetimestamp_, &from.originatetimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transmittimestamp_) -
    reinterpret_cast<char*>(&originatetimestamp_)) + sizeof(transmittimestamp_));
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoICMPTime)
}

void ProtoICMPTime::SharedCtor() {
  ::memset(&originatetimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transmittimestamp_) -
      reinterpret_cast<char*>(&originatetimestamp_)) + sizeof(transmittimestamp_));
}

ProtoICMPTime::~ProtoICMPTime() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoICMPTime)
  SharedDtor();
}

void ProtoICMPTime::SharedDtor() {
}

void ProtoICMPTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoICMPTime::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoICMPTime& ProtoICMPTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoICMPTime.base);
  return *internal_default_instance();
}


void ProtoICMPTime::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoICMPTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&originatetimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transmittimestamp_) -
      reinterpret_cast<char*>(&originatetimestamp_)) + sizeof(transmittimestamp_));
  _internal_metadata_.Clear();
}

bool ProtoICMPTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoICMPTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 originateTimestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &originatetimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 receiveTimestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receivetimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 transmitTimestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &transmittimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoICMPTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoICMPTime)
  return false;
#undef DO_
}

void ProtoICMPTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoICMPTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 originateTimestamp = 1;
  if (this->originatetimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->originatetimestamp(), output);
  }

  // uint32 receiveTimestamp = 2;
  if (this->receivetimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->receivetimestamp(), output);
  }

  // uint32 transmitTimestamp = 3;
  if (this->transmittimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->transmittimestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoICMPTime)
}

::google::protobuf::uint8* ProtoICMPTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoICMPTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 originateTimestamp = 1;
  if (this->originatetimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->originatetimestamp(), target);
  }

  // uint32 receiveTimestamp = 2;
  if (this->receivetimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->receivetimestamp(), target);
  }

  // uint32 transmitTimestamp = 3;
  if (this->transmittimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->transmittimestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoICMPTime)
  return target;
}

size_t ProtoICMPTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoICMPTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 originateTimestamp = 1;
  if (this->originatetimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->originatetimestamp());
  }

  // uint32 receiveTimestamp = 2;
  if (this->receivetimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->receivetimestamp());
  }

  // uint32 transmitTimestamp = 3;
  if (this->transmittimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->transmittimestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoICMPTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoICMPTime)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoICMPTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoICMPTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoICMPTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoICMPTime)
    MergeFrom(*source);
  }
}

void ProtoICMPTime::MergeFrom(const ProtoICMPTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoICMPTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.originatetimestamp() != 0) {
    set_originatetimestamp(from.originatetimestamp());
  }
  if (from.receivetimestamp() != 0) {
    set_receivetimestamp(from.receivetimestamp());
  }
  if (from.transmittimestamp() != 0) {
    set_transmittimestamp(from.transmittimestamp());
  }
}

void ProtoICMPTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoICMPTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoICMPTime::CopyFrom(const ProtoICMPTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoICMPTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoICMPTime::IsInitialized() const {
  return true;
}

void ProtoICMPTime::Swap(ProtoICMPTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoICMPTime::InternalSwap(ProtoICMPTime* other) {
  using std::swap;
  swap(originatetimestamp_, other->originatetimestamp_);
  swap(receivetimestamp_, other->receivetimestamp_);
  swap(transmittimestamp_, other->transmittimestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoICMPTime::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoExtraAddresses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoExtraAddresses::kIPAddressFieldNumber;
const int ProtoExtraAddresses::kTimesRepeatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoExtraAddresses::ProtoExtraAddresses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_icmpinfo_2eproto::scc_info_ProtoExtraAddresses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:netsensor.ProtoExtraAddresses)
}
ProtoExtraAddresses::ProtoExtraAddresses(const ProtoExtraAddresses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipaddress().size() > 0) {
    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  timesrepeated_ = from.timesrepeated_;
  // @@protoc_insertion_point(copy_constructor:netsensor.ProtoExtraAddresses)
}

void ProtoExtraAddresses::SharedCtor() {
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timesrepeated_ = 0u;
}

ProtoExtraAddresses::~ProtoExtraAddresses() {
  // @@protoc_insertion_point(destructor:netsensor.ProtoExtraAddresses)
  SharedDtor();
}

void ProtoExtraAddresses::SharedDtor() {
  ipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoExtraAddresses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoExtraAddresses::descriptor() {
  ::protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoExtraAddresses& ProtoExtraAddresses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_icmpinfo_2eproto::scc_info_ProtoExtraAddresses.base);
  return *internal_default_instance();
}


void ProtoExtraAddresses::Clear() {
// @@protoc_insertion_point(message_clear_start:netsensor.ProtoExtraAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timesrepeated_ = 0u;
  _internal_metadata_.Clear();
}

bool ProtoExtraAddresses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netsensor.ProtoExtraAddresses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string IPAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "netsensor.ProtoExtraAddresses.IPAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timesRepeated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timesrepeated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netsensor.ProtoExtraAddresses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netsensor.ProtoExtraAddresses)
  return false;
#undef DO_
}

void ProtoExtraAddresses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netsensor.ProtoExtraAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string IPAddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoExtraAddresses.IPAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipaddress(), output);
  }

  // uint32 timesRepeated = 2;
  if (this->timesrepeated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timesrepeated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:netsensor.ProtoExtraAddresses)
}

::google::protobuf::uint8* ProtoExtraAddresses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:netsensor.ProtoExtraAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string IPAddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "netsensor.ProtoExtraAddresses.IPAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipaddress(), target);
  }

  // uint32 timesRepeated = 2;
  if (this->timesrepeated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timesrepeated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netsensor.ProtoExtraAddresses)
  return target;
}

size_t ProtoExtraAddresses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netsensor.ProtoExtraAddresses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string IPAddress = 1;
  if (this->ipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipaddress());
  }

  // uint32 timesRepeated = 2;
  if (this->timesrepeated() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timesrepeated());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoExtraAddresses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:netsensor.ProtoExtraAddresses)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoExtraAddresses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoExtraAddresses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:netsensor.ProtoExtraAddresses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:netsensor.ProtoExtraAddresses)
    MergeFrom(*source);
  }
}

void ProtoExtraAddresses::MergeFrom(const ProtoExtraAddresses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:netsensor.ProtoExtraAddresses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipaddress().size() > 0) {

    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  if (from.timesrepeated() != 0) {
    set_timesrepeated(from.timesrepeated());
  }
}

void ProtoExtraAddresses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:netsensor.ProtoExtraAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoExtraAddresses::CopyFrom(const ProtoExtraAddresses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netsensor.ProtoExtraAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoExtraAddresses::IsInitialized() const {
  return true;
}

void ProtoExtraAddresses::Swap(ProtoExtraAddresses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoExtraAddresses::InternalSwap(ProtoExtraAddresses* other) {
  using std::swap;
  ipaddress_.Swap(&other->ipaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timesrepeated_, other->timesrepeated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoExtraAddresses::GetMetadata() const {
  protobuf_icmpinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_icmpinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace netsensor
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ICMPPacketsByInterface* Arena::CreateMaybeMessage< ::netsensor::ICMPPacketsByInterface >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ICMPPacketsByInterface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoICMPInfoContainer* Arena::CreateMaybeMessage< ::netsensor::ProtoICMPInfoContainer >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoICMPInfoContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoData* Arena::CreateMaybeMessage< ::netsensor::ProtoData >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoIdentification* Arena::CreateMaybeMessage< ::netsensor::ProtoIdentification >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoIdentification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoIpHeader* Arena::CreateMaybeMessage< ::netsensor::ProtoIpHeader >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoIpHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoDatagramInfo* Arena::CreateMaybeMessage< ::netsensor::ProtoDatagramInfo >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoDatagramInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoICMPTime* Arena::CreateMaybeMessage< ::netsensor::ProtoICMPTime >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoICMPTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::netsensor::ProtoExtraAddresses* Arena::CreateMaybeMessage< ::netsensor::ProtoExtraAddresses >(Arena* arena) {
  return Arena::CreateInternal< ::netsensor::ProtoExtraAddresses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
