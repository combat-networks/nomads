CC  = gcc
CXX = g++

CXXFLAGS = -g -DUNIX -DLINUX -DLINUX64 -DENABLE_DEBUG -DERROR_CHECKING -DRTT_TIMESTAMP -m64 -fPIC -Wl,-Bsymbolic\
           -DLITTLE_ENDIAN_SYSTEM -I../.. -I../../../../util/cpp \
           -I../../../../externals/JDK -I../../../../externals/JDK/linux \
           -I../../../../util/cpp/security

EXTERNALS_LIB=../../../../externals/lib/linux-x86_64

ifdef USE_SYSTEM_LIBS
  EXTRA_LIB = -lcrypto -lz
else
  HAS_CRYPTO_LIB = $(shell g++ -lcrypto 2>&1 | grep "undefined reference to" 1>/dev/null; echo $$?)
  EXTRA_LIB += $(shell if [ ${HAS_CRYPTO_LIB} -gt 0 ]; then echo "$(EXTERNALS_LIB)/libcrypto.a"; else  echo "-lcrypto"; fi)

  HAS_Z_LIB = $(shell g++ -lz 2>&1 | grep "undefined reference to" 1>/dev/null; echo $$?)
  EXTRA_LIB += $(shell if [ ${HAS_Z_LIB} -gt 0 ]; then echo "$(EXTERNALS_LIB)/libz.a"; else  echo "-lz"; fi)
endif

wrappers = $(wildcard ../*Wrapper.cpp)
wrappers_objs = $(wrappers:../%.cpp=%.o)

all: libmocketsjavawrapper.so

libmockets.a : $(objects) libutil.a libsecurity.a 
	make -C ../../linux -f Makefile.64bit

libsecurity.a :
	make -C ../../../../util/cpp/linux -f Makefile libsecurity.a


libutil.a : 
	make -C ../../../../util/cpp/linux -f Makefile

libmocketsjavawrapper.so: $(wrappers_objs) libutil.a libsecurity.a libmockets.a 
	$(CXX) $(CXXFLAGS) -shared -o ../../../bin/libmocketsjavawrapper.so \
	$(wrappers_objs) \
	../../linux/libmockets.a \
	../../../../util/cpp/linux/libsecurity.a \
	../../../../util/cpp/linux/libutil.a \
	$(EXTRA_LIB)

clean :
	(make -C ../../../../util/cpp/linux clean)
	(make -C ../../linux clean)
	rm -rf *.o *.a ../../../bin/libmocketsjavawrapper.so

%.o : ../%.cpp
	$(CXX) -c $(CXXFLAGS) $<

