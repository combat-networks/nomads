// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linktype.proto

package us.ihmc.aci.test.ddam;

/**
 * Protobuf type {@code ddam.LinkValues}
 */
public  final class LinkValues extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ddam.LinkValues)
    LinkValuesOrBuilder {
  // Use LinkValues.newBuilder() to construct.
  private LinkValues(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private LinkValues() {
    throughput_ = 0D;
    latency_ = 0;
    frequency_ = 0D;
    muxScheme_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private LinkValues(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 9: {

            throughput_ = input.readDouble();
            break;
          }
          case 16: {

            latency_ = input.readUInt32();
            break;
          }
          case 25: {

            frequency_ = input.readDouble();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            muxScheme_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return us.ihmc.aci.test.ddam.LinkTypeProto.internal_static_ddam_LinkValues_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return us.ihmc.aci.test.ddam.LinkTypeProto.internal_static_ddam_LinkValues_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            us.ihmc.aci.test.ddam.LinkValues.class, us.ihmc.aci.test.ddam.LinkValues.Builder.class);
  }

  public static final int THROUGHPUT_FIELD_NUMBER = 1;
  private double throughput_;
  /**
   * <code>optional double throughput = 1;</code>
   *
   * <pre>
   *max throughput of the link type
   * </pre>
   */
  public double getThroughput() {
    return throughput_;
  }

  public static final int LATENCY_FIELD_NUMBER = 2;
  private int latency_;
  /**
   * <code>optional uint32 latency = 2;</code>
   *
   * <pre>
   *average latency of the link type
   * </pre>
   */
  public int getLatency() {
    return latency_;
  }

  public static final int FREQUENCY_FIELD_NUMBER = 3;
  private double frequency_;
  /**
   * <code>optional double frequency = 3;</code>
   *
   * <pre>
   *frequency on the link
   * </pre>
   */
  public double getFrequency() {
    return frequency_;
  }

  public static final int MUXSCHEME_FIELD_NUMBER = 4;
  private volatile java.lang.Object muxScheme_;
  /**
   * <code>optional string muxScheme = 4;</code>
   *
   * <pre>
   *multiplexing scheme
   * </pre>
   */
  public java.lang.String getMuxScheme() {
    java.lang.Object ref = muxScheme_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      muxScheme_ = s;
      return s;
    }
  }
  /**
   * <code>optional string muxScheme = 4;</code>
   *
   * <pre>
   *multiplexing scheme
   * </pre>
   */
  public com.google.protobuf.ByteString
      getMuxSchemeBytes() {
    java.lang.Object ref = muxScheme_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      muxScheme_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (throughput_ != 0D) {
      output.writeDouble(1, throughput_);
    }
    if (latency_ != 0) {
      output.writeUInt32(2, latency_);
    }
    if (frequency_ != 0D) {
      output.writeDouble(3, frequency_);
    }
    if (!getMuxSchemeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, muxScheme_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (throughput_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, throughput_);
    }
    if (latency_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, latency_);
    }
    if (frequency_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, frequency_);
    }
    if (!getMuxSchemeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, muxScheme_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof us.ihmc.aci.test.ddam.LinkValues)) {
      return super.equals(obj);
    }
    us.ihmc.aci.test.ddam.LinkValues other = (us.ihmc.aci.test.ddam.LinkValues) obj;

    boolean result = true;
    result = result && (
        java.lang.Double.doubleToLongBits(getThroughput())
        == java.lang.Double.doubleToLongBits(
            other.getThroughput()));
    result = result && (getLatency()
        == other.getLatency());
    result = result && (
        java.lang.Double.doubleToLongBits(getFrequency())
        == java.lang.Double.doubleToLongBits(
            other.getFrequency()));
    result = result && getMuxScheme()
        .equals(other.getMuxScheme());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + THROUGHPUT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getThroughput()));
    hash = (37 * hash) + LATENCY_FIELD_NUMBER;
    hash = (53 * hash) + getLatency();
    hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getFrequency()));
    hash = (37 * hash) + MUXSCHEME_FIELD_NUMBER;
    hash = (53 * hash) + getMuxScheme().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static us.ihmc.aci.test.ddam.LinkValues parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(us.ihmc.aci.test.ddam.LinkValues prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ddam.LinkValues}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ddam.LinkValues)
      us.ihmc.aci.test.ddam.LinkValuesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return us.ihmc.aci.test.ddam.LinkTypeProto.internal_static_ddam_LinkValues_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return us.ihmc.aci.test.ddam.LinkTypeProto.internal_static_ddam_LinkValues_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              us.ihmc.aci.test.ddam.LinkValues.class, us.ihmc.aci.test.ddam.LinkValues.Builder.class);
    }

    // Construct using us.ihmc.aci.test.ddam.LinkValues.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      throughput_ = 0D;

      latency_ = 0;

      frequency_ = 0D;

      muxScheme_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return us.ihmc.aci.test.ddam.LinkTypeProto.internal_static_ddam_LinkValues_descriptor;
    }

    public us.ihmc.aci.test.ddam.LinkValues getDefaultInstanceForType() {
      return us.ihmc.aci.test.ddam.LinkValues.getDefaultInstance();
    }

    public us.ihmc.aci.test.ddam.LinkValues build() {
      us.ihmc.aci.test.ddam.LinkValues result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public us.ihmc.aci.test.ddam.LinkValues buildPartial() {
      us.ihmc.aci.test.ddam.LinkValues result = new us.ihmc.aci.test.ddam.LinkValues(this);
      result.throughput_ = throughput_;
      result.latency_ = latency_;
      result.frequency_ = frequency_;
      result.muxScheme_ = muxScheme_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof us.ihmc.aci.test.ddam.LinkValues) {
        return mergeFrom((us.ihmc.aci.test.ddam.LinkValues)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(us.ihmc.aci.test.ddam.LinkValues other) {
      if (other == us.ihmc.aci.test.ddam.LinkValues.getDefaultInstance()) return this;
      if (other.getThroughput() != 0D) {
        setThroughput(other.getThroughput());
      }
      if (other.getLatency() != 0) {
        setLatency(other.getLatency());
      }
      if (other.getFrequency() != 0D) {
        setFrequency(other.getFrequency());
      }
      if (!other.getMuxScheme().isEmpty()) {
        muxScheme_ = other.muxScheme_;
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      us.ihmc.aci.test.ddam.LinkValues parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (us.ihmc.aci.test.ddam.LinkValues) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double throughput_ ;
    /**
     * <code>optional double throughput = 1;</code>
     *
     * <pre>
     *max throughput of the link type
     * </pre>
     */
    public double getThroughput() {
      return throughput_;
    }
    /**
     * <code>optional double throughput = 1;</code>
     *
     * <pre>
     *max throughput of the link type
     * </pre>
     */
    public Builder setThroughput(double value) {
      
      throughput_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double throughput = 1;</code>
     *
     * <pre>
     *max throughput of the link type
     * </pre>
     */
    public Builder clearThroughput() {
      
      throughput_ = 0D;
      onChanged();
      return this;
    }

    private int latency_ ;
    /**
     * <code>optional uint32 latency = 2;</code>
     *
     * <pre>
     *average latency of the link type
     * </pre>
     */
    public int getLatency() {
      return latency_;
    }
    /**
     * <code>optional uint32 latency = 2;</code>
     *
     * <pre>
     *average latency of the link type
     * </pre>
     */
    public Builder setLatency(int value) {
      
      latency_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 latency = 2;</code>
     *
     * <pre>
     *average latency of the link type
     * </pre>
     */
    public Builder clearLatency() {
      
      latency_ = 0;
      onChanged();
      return this;
    }

    private double frequency_ ;
    /**
     * <code>optional double frequency = 3;</code>
     *
     * <pre>
     *frequency on the link
     * </pre>
     */
    public double getFrequency() {
      return frequency_;
    }
    /**
     * <code>optional double frequency = 3;</code>
     *
     * <pre>
     *frequency on the link
     * </pre>
     */
    public Builder setFrequency(double value) {
      
      frequency_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double frequency = 3;</code>
     *
     * <pre>
     *frequency on the link
     * </pre>
     */
    public Builder clearFrequency() {
      
      frequency_ = 0D;
      onChanged();
      return this;
    }

    private java.lang.Object muxScheme_ = "";
    /**
     * <code>optional string muxScheme = 4;</code>
     *
     * <pre>
     *multiplexing scheme
     * </pre>
     */
    public java.lang.String getMuxScheme() {
      java.lang.Object ref = muxScheme_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        muxScheme_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string muxScheme = 4;</code>
     *
     * <pre>
     *multiplexing scheme
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMuxSchemeBytes() {
      java.lang.Object ref = muxScheme_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        muxScheme_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string muxScheme = 4;</code>
     *
     * <pre>
     *multiplexing scheme
     * </pre>
     */
    public Builder setMuxScheme(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      muxScheme_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string muxScheme = 4;</code>
     *
     * <pre>
     *multiplexing scheme
     * </pre>
     */
    public Builder clearMuxScheme() {
      
      muxScheme_ = getDefaultInstance().getMuxScheme();
      onChanged();
      return this;
    }
    /**
     * <code>optional string muxScheme = 4;</code>
     *
     * <pre>
     *multiplexing scheme
     * </pre>
     */
    public Builder setMuxSchemeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      muxScheme_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:ddam.LinkValues)
  }

  // @@protoc_insertion_point(class_scope:ddam.LinkValues)
  private static final us.ihmc.aci.test.ddam.LinkValues DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new us.ihmc.aci.test.ddam.LinkValues();
  }

  public static us.ihmc.aci.test.ddam.LinkValues getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LinkValues>
      PARSER = new com.google.protobuf.AbstractParser<LinkValues>() {
    public LinkValues parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new LinkValues(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<LinkValues> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LinkValues> getParserForType() {
    return PARSER;
  }

  public us.ihmc.aci.test.ddam.LinkValues getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

