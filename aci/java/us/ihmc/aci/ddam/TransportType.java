// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: container.proto

package us.ihmc.aci.ddam;

/**
 * Protobuf enum {@code ddam.TransportType}
 */
public enum TransportType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UDP_UNICAST = 0;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through udp unicast
   * </pre>
   */
  UDP_UNICAST(0, 0),
  /**
   * <code>UDP_MULTICAST = 1;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through udp multicast
   * </pre>
   */
  UDP_MULTICAST(1, 1),
  /**
   * <code>TCP = 2;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through tcp
   * </pre>
   */
  TCP(2, 2),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>UDP_UNICAST = 0;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through udp unicast
   * </pre>
   */
  public static final int UDP_UNICAST_VALUE = 0;
  /**
   * <code>UDP_MULTICAST = 1;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through udp multicast
   * </pre>
   */
  public static final int UDP_MULTICAST_VALUE = 1;
  /**
   * <code>TCP = 2;</code>
   *
   * <pre>
   *indicates that the recipient will be reached through tcp
   * </pre>
   */
  public static final int TCP_VALUE = 2;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  public static TransportType valueOf(int value) {
    switch (value) {
      case 0: return UDP_UNICAST;
      case 1: return UDP_MULTICAST;
      case 2: return TCP;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TransportType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TransportType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TransportType>() {
          public TransportType findValueByNumber(int number) {
            return TransportType.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return us.ihmc.aci.ddam.ContainerProto.getDescriptor()
        .getEnumTypes().get(2);
  }

  private static final TransportType[] VALUES = values();

  public static TransportType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private TransportType(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ddam.TransportType)
}

